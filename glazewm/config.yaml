general:
  # Commands to run when the WM has started. This is useful for running a
  # script or launching another application.
  # Example: The below command launches Zebar.
  startup_commands: ['shell-exec zebar']

  # Commands to run just before the WM is shutdown.
  # Example: The below command kills Zebar.
  shutdown_commands: ['shell-exec taskkill /IM zebar.exe /F']

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to jump the cursor between windows focused by the WM.
  cursor_follows_focus: false

  # Whether to switch back and forth between the previously focused workspace
  # when focusing the current workspace.
  toggle_workspace_on_refocus: false

  # Whether to show floating windows as always on top.
  show_floating_on_top: false

  # Amount to move floating windows by (eg. when using `alt+<hjkl>` on a floating window)
  floating_window_move_amount: "2%"

  # Whether to center new floating windows.
  center_new_floating_windows: true

  # *Strongly* recommended to set to 'false'. Whether to globally enable/disable
  # window transition animations (on minimize, close, etc). Set to 'unchanged'
  # to make no setting changes.
  # window_animations: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: false

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: 'monitor_focus'

gaps:
  # Whether to scale the gaps with the DPI of the monitor.
  scale_with_dpi: true

  # Gap between adjacent windows.
  inner_gap: "5px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: '50px'
    right: '8px'
    bottom: '8px'
    left: '8px'

window_effects:
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: '#8dbcff'
      # color: "#bea3c7"

    # Remove the title bar from the window's frame. Note that this can
    # cause rendering issues for some applications.
    hide_title_bar:
      enabled: false

    # Change the corner style of the window's frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: false
      # Allowed values: 'square', 'rounded', 'small_rounded'.
      style: 'square'

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: '#a1a1a1'
    hide_title_bar:
      enabled: false
    corner_style:
      enabled: false
      style: 'square'

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: 'tiling'

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: "1"
  - name: "2"
  - name: "3"
  - name: "4"
  - name: "5"
  - name: "6"
  - name: "7"
  - name: "8"
  - name: "9"

window_rules:
  - commands: ['ignore']
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: 'zebar' }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: '[Pp]icture.in.[Pp]icture' }
        window_class: { regex: 'Chrome_WidgetWin_1|MozillaDialogClass' }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: 'PowerToys' }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: 'PowerToys' }
        window_title: { regex: '.*? - Peek' }
      - window_process: { equals: 'Lively' }
        window_class: { regex: 'HwndWrapper' }

binding_modes:
  - name: "resize"
    keybindings:
      # resize focused window by a percentage or pixel amount.
      - commands: ["resize --width -2%"]
        bindings: ["left"]
      - commands: ["resize --width +2%"]
        bindings: ["right"]
      - commands: ["resize --height +2%"]
        bindings: ["up"]
      - commands: ["resize --height -2%"]
        bindings: ["down"]
      # press escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape"]

  # When enabled, all keybindings are disabled except for Alt+Shift+P which
  # returns to default keybindings.
  - name: 'pause'
    keybindings:
      - commands: ['wm-disable-binding-mode --name pause']
        bindings: ['alt+shift+p']

keybindings:
  # shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["alt+left"]
  - commands: ["focus --direction right"]
    bindings: ["alt+right"]
  - commands: ["focus --direction up"]
    bindings: ["alt+up"]
  - commands: ["focus --direction down"]
    bindings: ["alt+down"]

  # move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["alt+shift+left"]
  - commands: ["move --direction right"]
    bindings: ["alt+shift+right"]
  - commands: ["move --direction up"]
    bindings: ["alt+shift+up"]
  - commands: ["move --direction down"]
    bindings: ["alt+shift+down"]

  # disables all keybindings until alt+shift+p is pressed again.
  - commands: ['wm-enable-binding-mode --name pause']
    bindings: ['alt+shift+p']

  # as an alternative to the resize keybindings above, resize mode enables resizing via
  # hjkl or arrow keys. the binding mode is defined above with the name "resize".
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["alt+r"]

  # change tiling direction. this determines where new tiling windows will be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+v"]

  # change focus between floating / tiling / fullscreen windows.
  - commands: ["wm-cycle-focus"]
    bindings: ["alt+space"]

  # change the focused window to be floating / tiling.
  - commands: ["toggle-floating --centered"]
    bindings: ["alt+shift+space"]

  # change the focused window to be fullscreen.
  - commands: ["toggle-fullscreen"]
    bindings: ["alt+x"]

  # minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["alt+m"]

  # close focused window.
  - commands: ["close"]
    bindings: ["alt+shift+q"]

  # kill glazewm process safely.
  - commands: ["wm-exit"]
    bindings: ["alt+shift+e"]

  # re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["alt+shift+r"]

  # redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["alt+shift+w"]

  # focus the workspace that last had focus.
  - commands: ["focus --recent-workspace"]
    bindings: ["alt+y"]

  # focus the next/previous workspace defined in `workspaces` config.
  - commands: ["focus --next-workspace"]
    bindings: ["alt+s"]
  - commands: ["focus --prev-workspace"]
    bindings: ["alt+a"]

  # change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 1"]
    bindings: ["alt+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["alt+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["alt+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["alt+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["alt+9"]

  # move focused workspace to a monitor in a given direction.
  - commands: ["move-workspace --direction left"]
    bindings: ["alt+shift+a"]
  - commands: ["move-workspace --direction right"]
    bindings: ["alt+shift+s"]
  # - command: "move workspace up"
  #   binding: "alt+d"
  # - command: "move workspace down"
  #   binding: "alt+s"

  # move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 1"]
    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5"]
    bindings: ["alt+shift+5"]
  - commands: ["move --workspace 6"]
    bindings: ["alt+shift+6"]
  - commands: ["move --workspace 7"]
    bindings: ["alt+shift+7"]
  - commands: ["move --workspace 8"]
    bindings: ["alt+shift+8"]
  - commands: ["move --workspace 9"]
    bindings: ["alt+shift+9"]
